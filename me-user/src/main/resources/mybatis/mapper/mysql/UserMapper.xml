<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.me.inner.mapper.UserMapper">
    
    <resultMap id="userMap" type="com.me.inner.dto.UserDTO">
        <id property="userId" column="userId_n" jdbcType="INTEGER"/>
        <result property="username" column="username_m" jdbcType="VARCHAR"/>
        <result property="enabled" column="enabled_c" jdbcType="CHAR"/>
        <result property="createDate" column="crtOn_dt" jdbcType="TIMESTAMP"/>
        <result property="createBy" column="crtBy_m" jdbcType="VARCHAR"/>
        <association property="userInfo" javaType="com.me.inner.dto.UserInfoDTO">
            <id property="infoId" column="infoId_n" jdbcType="INTEGER"/>
            <result property="userId" column="userId_n" jdbcType="INTEGER"/>
            <result property="name" column="name_m" jdbcType="VARCHAR"/>
            <result property="sex" column="sex_c" jdbcType="CHAR"/>
            <result property="age" column="age_n" jdbcType="INTEGER"/>
            <result property="from" column="from_m" jdbcType="VARCHAR"/>
            <result property="birthDay" column="birth_d" jdbcType="DATE"/>
            <result property="school" column="school_m" jdbcType="VARCHAR"/>
            <result property="phone" column="phone_x" jdbcType="VARCHAR"/>
            <result property="email" column="email_x" jdbcType="VARCHAR"/>
            <result property="weight" column="weight_n" jdbcType="DOUBLE"/>
            <result property="height" column="height_n" jdbcType="DOUBLE"/>
            <result property="introduction" column="intro_x" jdbcType="VARCHAR"/>
        </association>
    </resultMap>
    
    <select id="getUserByUserId" parameterType="java.lang.Integer" resultMap="userMap">
        SELECT
            u.userId_n,
            u.username_m,
            u.enabled_c,
            u.crtOn_dt,
            u.crtBy_m,
            info.infoId_n,
            info.name_m,
            info.sex_c,
            info.age_n,
            info.from_m,
            info.birth_d,
            info.school_m,
            info.phone_x,
            info.email_x,
            info.weight_n,
            info.height_n,
            info.intro_x
        FROM ${tablePrefix}user u
        LEFT JOIN ${tablePrefix}userinfo info ON u.userId_n = info.userId_n
        WHERE u.enabled_c = 'Y' AND u.userId_n = #{userId}
    </select>

    <select id="countUserByRole" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM ${tablePrefix}user u
        LEFT JOIN ${tablePrefix}user2role ur ON u.userId_n = ur.userId_n
        LEFT JOIN ${tablePrefix}role r ON ur.roleId_n = r.roleId_n
        WHERE u.enabled_c = 'Y'
        <if test="roleName!='' and roleName!=null">
            AND r.roleName_m = #{roleName}
        </if>
    </select>

    <select id="listUserByRole" resultMap="userMap">
        SELECT DISTINCT
            u.userId_n,
            u.username_m,
            u.enabled_c,
            u.crtOn_dt,
            u.crtBy_m,
            info.infoId_n,
            info.name_m,
            info.sex_c,
            info.age_n,
            info.from_m,
            info.birth_d,
            info.school_m,
            info.phone_x,
            info.email_x,
            info.weight_n,
            info.height_n,
            info.intro_x
        FROM ${tablePrefix}user u
        LEFT JOIN ${tablePrefix}userinfo info ON u.userId_n = info.userId_n
        LEFT JOIN ${tablePrefix}user2role ur ON u.userId_n = ur.userId_n
        LEFT JOIN ${tablePrefix}role role ON ur.roleId_n = role.roleId_n
        WHERE u.enabled_c = 'Y' AND role.enabled_c = 'Y'
        <if test="roleName!='' and roleName!=null">
            AND role.roleName_m = #{roleName}
        </if>
         LIMIT #{pagination,begin}, #{pagination,limit}
    </select>

    <select id="listRole" resultType="com.me.inner.dto.RoleDTO">
        SELECT
            roleId_n AS roleId,
            roleName_m AS roleName,
        FROM ${tablePrefix}role WHERE enabled_c = 'Y'
    </select>

    <select id="listResource" resultType="com.me.inner.dto.ResourceDTO">
        SELECT
            resId_n AS resourceId,
            resType_x AS type,
            resPath_x AS path,
            resDesc_x AS description
        FROM ${tablePrefix}resource WHERE enabled_c = 'Y'
    </select>

    <select id="countLoginHistory" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM ${tablePrefix}loginhistory
    </select>
    
    <select id="listLoginHistory" parameterType="com.me.inner.dto.PaginationDTO" resultType="com.me.inner.dto.LoginHistoryDTO">
        SELECT
            id_n AS id,
            username_m AS username,
            ip_x AS ip,
            status_x AS status,
            crtOn_dt AS createDate
        FROM ${tablePrefix}loginhistory
        LIMIT #{pagination,begin}, #{pagination,limit}
    </select>
    
    <insert id="saveUser" parameterType="com.me.inner.dto.UserDTO" keyColumn="userId_n" keyProperty="userId" useGeneratedKeys="true">
        INSERT INTO ${tablePrefix}user
        (
            username_m,
            password_x,
            enabled_c,
            crtOn_dt,
            crtBy_m
        )
        VALUES
        (
            #{username, jdbcType=VARCHAR},
            #{password, jdbcType=VARCHAR},
            #{enabled, jdbcType=CHAR},
            #{createDate, jdbcType=TIMESTAMP},
            #{createBy, jdbcType=VARCHAR}
        )
    </insert>

    <insert id="saveUserInfo" parameterType="com.me.inner.dto.UserInfoDTO" keyColumn="infoId_n" keyProperty="infoId" useGeneratedKeys="true">
        INSERT INTO ${tablePrefix}userinfo
        (
            userId_n,
            name_m,
            sex_c,
            age_n,
            from_m,
            birth_d,
            school_m,
            phone_x,
            email_x,
            weight_n,
            height_n,
            intro_x,
            crtOn_dt,
            crtBy_m,
            updOn_dt,
            updBy_m
        )
        VALUES
        (
            #{userId, jdbcType=INTEGER},
            #{name, jdbcType=VARCHAR},
            #{sex, jdbcType=CHAR},
            #{age, jdbcType=INTEGER},
            #{from, jdbcType=VARCHAR},
            #{birthDay, jdbcType=DATE},
            #{school, jdbcType=VARCHAR},
            #{phone, jdbcType=VARCHAR},
            #{email, jdbcType=VARCHAR},
            #{weight, jdbcType=DOUBLE},
            #{height, jdbcType=DOUBLE},
            #{introduction, jdbcType=VARCHAR},
            #{createDate, jdbcType=TIMESTAMP},
            #{createBy, jdbcType=VARCHAR},
            #{updateDate, jdbcType=TIMESTAMP},
            #{updateBy, jdbcType=VARCHAR}
        )
    </insert>

    <insert id="saveUser2Role" parameterType="java.util.List">
        INSERT INTO ${tablePrefix}role2res
        (
            userId_n,
            roleId_n,
            crtOn_dt,
            crtBy_m
        )
        VALUES
        <foreach collection="list" item="user2Role" separator=",">
            (
                #{user2Role.userId, jdbcType=INTEGER},
                #{user2Role.roleId, jdbcType=INTEGER},
                #{user2Role.createDate, jdbcType=TIMESTAMP},
                #{user2Role.createBy, jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <update id="deleteUser" parameterType="java.lang.Integer">
        UPDATE ${tablePrefix}user SET enabled_c = 'N' WHERE userId_n = #{userId}
    </update>

    <delete id="deleteUser2Role" parameterType="java.lang.Integer">
        DELETE FROM ${tablePrefix}user2role WHERE userId_n = #{userId}
    </delete>

    <insert id="saveRole" parameterType="com.me.inner.dto.RoleDTO" keyColumn="roleId_n" keyProperty="roleId" useGeneratedKeys="true">
        INSERT INTO ${tablePrefix}role
        (
            roleName_m,
            enabled_c,
            crtOn_dt,
            crtBy_m
        )
        VALUES
        (
            #{roleName, jdbcType=VARCHAR},
            #{enabled, jdbcType=CHAR},
            #{createDate, jdbcType=TIMESTAMP},
            #{createBy, jdbcType=VARCHAR}
        )
    </insert>

    <update id="deleteRole" parameterType="java.lang.Integer">
        UPDATE ${tablePrefix}role SET enabled_c = 'N' WHERE roleId_n = #{roleId}
    </update>
    
    <delete id="deleteRole2Res">
        DELETE FROM ${tablePrefix}role2user
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="roleId!=null">
                AND roleId_n = #{roleId}
            </if>
            <if test="resId!=null">
                AND resId_n = #{resId}
            </if>
        </trim>
    </delete>

    <insert id="saveResource" parameterType="com.me.inner.dto.ResourceDTO" keyColumn="resId_n" keyProperty="resourceId" useGeneratedKeys="true">
        INSERT INTO ${tablePrefix}resource
        (
            resType_x,
            resPath_x,
            resDesc_x,
            enabled_c,
            crtOn_dt,
            crtBy_m
        )
        VALUES
        (
            #{type, jdbcType=VARCHAR},
            #{path, jdbcType=VARCHAR},
            #{description, jdbcType=VARCHAR},
            #{enabled, jdbcType=CHAR},
            #{createDate, jdbcType=TIMESTAMP},
            #{createBy, jdbcType=VARCHAR}
        )
    </insert>
    
    <insert id="saveRole2Resource" parameterType="com.me.inner.dto.Role2ResourceDTO">
        INSERT INTO ${tablePrefix}role2res
        (
            roleId_n,
            resId_n,
            crtOn_dt,
            crtBy_m
        )
        VALUES
        (
            #{roleId, jdbcType=INTEGER},
            #{resourceId, jdbcType=INTEGER},
            #{createDate, jdbcType=TIMESTAMP},
            #{createBy, jdbcType=VARCHAR}
        )
    </insert>
    
    <update id="deleteResource" parameterType="java.lang.Integer">
        UPDATE ${tablePrefix}resource SET enabled_c = 'N' WHERE resId_n = #{resourceId}
    </update>

    <update id="resetPassword" parameterType="com.me.inner.dto.UserDTO">
        UPDATE ${tablePrefix}user SET
            password_x = #{password},
            updOn_dt = #{updateDate},
            updBy_m = #{updateBy}
        WHERE userId_n = #{userId}
    </update>

</mapper>